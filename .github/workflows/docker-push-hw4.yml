name: Auto Build and Push Docker Images

on:
  workflow_dispatch:
  push:
    paths:
      - "hw4/**/Dockerfile"

jobs:
  detect-and-build:
    runs-on: ubuntu-latest
    outputs:
      folders: ${{ steps.set-folders.outputs.folders }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Detect changed folders with Dockerfile
        id: set-folders
        run: |
          folders=$(find hw4 -type f -name Dockerfile | awk -F/ '{print $2}' | sort -u)
          json=$(printf '%s\n' $folders | jq -R . | jq -s .)

          echo "Detected changed folders: $json"

          if [ "$json" == "[]" ]; then
            echo "::error::No Dockerfiles found"
            exit 1
          fi

          sanitized=$(echo "$json" | sed 's/%/%25/g; s/\n/%0A/g; s/\r/%0D/g')
          echo "folders=$sanitized" >> $GITHUB_OUTPUT

  build-and-push:
    needs: detect-and-build
    if: needs.detect-and-build.outputs.folders != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        folder: ${{ fromJson(needs.detect-and-build.outputs.folders) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Read version from Dockerfile
        id: version
        run: |
          file=hw4/${{ matrix.folder }}/Dockerfile
          version=$(grep -iE 'label +version *= *"?[0-9]+\.[0-9]+(\.[0-9]+)?"?' "$file" | sed -E 's/.*version *= *"?([0-9]+\.[0-9]+(\.[0-9]+)?)"?/\1/')
          echo "tag=${{ matrix.folder }}-$version" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./hw4/${{ matrix.folder }}
          push: true
          tags: tanimal19/2025cloud:${{ steps.version.outputs.tag }}
